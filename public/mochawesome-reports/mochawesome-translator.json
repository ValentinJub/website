{
  "stats": {
    "suites": 6,
    "tests": 30,
    "passes": 30,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-20T20:36:24.850Z",
    "end": "2023-09-20T20:36:25.090Z",
    "duration": 240,
    "testsRegistered": 30,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7d601a71-71d5-48e5-be54-2590e34a5d38",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f5c0dac-0d5c-4626-9cb8-7aa7caee9de9",
          "title": "Functional Tests",
          "fullFile": "/home/val/dev/website/public/tests/translator/functional-tests.js",
          "file": "/public/tests/translator/functional-tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3bd210a3-a6b8-418b-831a-9cc1e458c766",
              "title": "Translation tests, POST requests to /api/translate",
              "fullFile": "/home/val/dev/website/public/tests/translator/functional-tests.js",
              "file": "/public/tests/translator/functional-tests.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Translation with text and locale fields",
                  "fullTitle": "Functional Tests Translation tests, POST requests to /api/translate Translation with text and locale fields",
                  "timedOut": false,
                  "duration": 98,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/projects/qa/translator/api/translate')\n    .send({\n      text: Translations.ab1,\n      locale: localeArray[1]\n    })\n    .end((err,res) => {\n      assert.equal(res.status, 200);\n      assert.hasAllKeys(res.body, [\"text\",\"translation\"])\n      assert.isString(res.body.translation)\n      assert.isString(res.body.text)\n      assert.strictEqual(res.body.text, Translations.ab1);\n      assert.strictEqual(res.body.translation, Translations.r1);\n      done();\n    })",
                  "err": {},
                  "uuid": "e9f5c97c-2129-4d73-b109-ab33a48c6952",
                  "parentUUID": "3bd210a3-a6b8-418b-831a-9cc1e458c766",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translation with text and invalid locale field",
                  "fullTitle": "Functional Tests Translation tests, POST requests to /api/translate Translation with text and invalid locale field",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/projects/qa/translator/api/translate')\n    .send({\n      text: Translations.ab1,\n      locale: \"chinese-to-french\"\n    })\n    .end((err,res) => {\n      assert.equal(res.status, 200);\n      assert.hasAllKeys(res.body, \"error\") \n      assert.isString(res.body.error)\n      assert.strictEqual(res.body.error, 'Invalid value for locale field');\n      done();\n    })",
                  "err": {},
                  "uuid": "7b522067-015b-4526-be00-2e1a5d254432",
                  "parentUUID": "3bd210a3-a6b8-418b-831a-9cc1e458c766",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translation with missing text field",
                  "fullTitle": "Functional Tests Translation tests, POST requests to /api/translate Translation with missing text field",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/projects/qa/translator/api/translate')\n    .send({\n      locale: \"american-to-british\"\n    })\n    .end((err,res) => {\n      assert.equal(res.status, 200);\n      assert.hasAllKeys(res.body, \"error\") \n      assert.isString(res.body.error)\n      assert.strictEqual(res.body.error, 'Required field(s) missing');\n      done();\n    })",
                  "err": {},
                  "uuid": "298e0011-5265-4d2b-bbdb-1a88c3914f58",
                  "parentUUID": "3bd210a3-a6b8-418b-831a-9cc1e458c766",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translation with missing locale field",
                  "fullTitle": "Functional Tests Translation tests, POST requests to /api/translate Translation with missing locale field",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/projects/qa/translator/api/translate')\n    .send({\n      text: \"prost\"\n    })\n    .end((err,res) => {\n      assert.equal(res.status, 200);\n      assert.hasAllKeys(res.body, \"error\") \n      assert.isString(res.body.error)\n      assert.strictEqual(res.body.error, 'Required field(s) missing');\n      done();\n    })",
                  "err": {},
                  "uuid": "2fd09d17-727a-40c2-9bf8-2433dfcffa85",
                  "parentUUID": "3bd210a3-a6b8-418b-831a-9cc1e458c766",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translation with empty text",
                  "fullTitle": "Functional Tests Translation tests, POST requests to /api/translate Translation with empty text",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/projects/qa/translator/api/translate')\n    .send({\n      text: \"\",\n      locale: \"british-to-american\"\n    })\n    .end((err,res) => {\n      assert.equal(res.status, 200);\n      assert.hasAllKeys(res.body, \"error\") \n      assert.isString(res.body.error)\n      assert.strictEqual(res.body.error, 'No text to translate');\n      done();\n    })",
                  "err": {},
                  "uuid": "553123aa-8304-4e18-9ee7-6dda9055dd09",
                  "parentUUID": "3bd210a3-a6b8-418b-831a-9cc1e458c766",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translation with text that needs no translation",
                  "fullTitle": "Functional Tests Translation tests, POST requests to /api/translate Translation with text that needs no translation",
                  "timedOut": false,
                  "duration": 67,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/projects/qa/translator/api/translate')\n    .send({\n      text: \"Hi my name is Valentin.\",\n      locale: \"british-to-american\"\n    })\n    .end((err,res) => {\n      assert.equal(res.status, 200);\n      assert.hasAllKeys(res.body, [\"text\",\"translation\"])\n      assert.isString(res.body.translation)\n      assert.isString(res.body.text)\n      assert.strictEqual(res.body.text, \"Hi my name is Valentin.\");\n      assert.strictEqual(res.body.translation, \"Everything looks good to me!\");\n      done();\n    })",
                  "err": {},
                  "uuid": "10e82f55-fb21-4bb2-89ca-889e68642d82",
                  "parentUUID": "3bd210a3-a6b8-418b-831a-9cc1e458c766",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9f5c97c-2129-4d73-b109-ab33a48c6952",
                "7b522067-015b-4526-be00-2e1a5d254432",
                "298e0011-5265-4d2b-bbdb-1a88c3914f58",
                "2fd09d17-727a-40c2-9bf8-2433dfcffa85",
                "553123aa-8304-4e18-9ee7-6dda9055dd09",
                "10e82f55-fb21-4bb2-89ca-889e68642d82"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 171,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "45f7a74e-85b0-40dd-91d4-704d758ec121",
          "title": "Unit Tests",
          "fullFile": "/home/val/dev/website/public/tests/translator/unit-tests.js",
          "file": "/public/tests/translator/unit-tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
              "title": "Translate to British English",
              "fullFile": "/home/val/dev/website/public/tests/translator/unit-tests.js",
              "file": "/public/tests/translator/unit-tests.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Translate: \"Mangoes are my favorite fruit.",
                  "fullTitle": "Unit Tests Translate to British English Translate: \"Mangoes are my favorite fruit.",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Mangoes are my favorite fruit.\", \"american-to-british\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, 'Mangoes are my <span class=\"highlight\">favourite</span> fruit.')",
                  "err": {},
                  "uuid": "521919bf-93dc-425a-b853-49862d4558a1",
                  "parentUUID": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate I ate yogurt for breakfast.",
                  "fullTitle": "Unit Tests Translate to British English Translate I ate yogurt for breakfast.",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"I ate yogurt for breakfast.\", \"american-to-british\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, 'I ate <span class=\"highlight\">yoghurt</span> for <span class=\"highlight\">brekkie</span>.')",
                  "err": {},
                  "uuid": "1daa1db3-7458-4ba3-bb3d-a66456241b14",
                  "parentUUID": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate We had a party at my friend's condo.",
                  "fullTitle": "Unit Tests Translate to British English Translate We had a party at my friend's condo.",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"We had a party at my friend's condo.\", \"american-to-british\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `We had a party at my friend's <span class=\"highlight\">flat</span>.`)",
                  "err": {},
                  "uuid": "066807ea-e2ac-4c9f-bf92-66c0b1cf612b",
                  "parentUUID": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate Can you toss this in the trashcan for me? ",
                  "fullTitle": "Unit Tests Translate to British English Translate Can you toss this in the trashcan for me? ",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Can you toss this in the trashcan for me?\", \"american-to-british\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `Can you toss this in the <span class=\"highlight\">bin</span> for me?`)",
                  "err": {},
                  "uuid": "b20df9c0-a2a3-403e-b2c8-7528ac62599c",
                  "parentUUID": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate The parking lot was full.",
                  "fullTitle": "Unit Tests Translate to British English Translate The parking lot was full.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"The parking lot was full.\", \"american-to-british\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `The <span class=\"highlight\">car park</span> was full.`)",
                  "err": {},
                  "uuid": "afd5c3a0-291a-40e7-a09e-7a618bd0f877",
                  "parentUUID": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate Like a high tech Rube Goldberg machine.",
                  "fullTitle": "Unit Tests Translate to British English Translate Like a high tech Rube Goldberg machine.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Like a high tech Rube Goldberg machine.\", \"american-to-british\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `Like a high tech <span class=\"highlight\">Heath Robinson device</span>.`)",
                  "err": {},
                  "uuid": "00cd0655-07dd-44f5-942e-f043828633bd",
                  "parentUUID": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate To play hooky means to skip class or work.",
                  "fullTitle": "Unit Tests Translate to British English Translate To play hooky means to skip class or work.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"To play hooky means to skip class or work.\", \"american-to-british\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `To <span class=\"highlight\">bunk off</span> means to skip class or work.`)",
                  "err": {},
                  "uuid": "a851cc18-a331-4ea7-a96d-274471e4ad22",
                  "parentUUID": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate No Mr. Bond, I expect you to die.",
                  "fullTitle": "Unit Tests Translate to British English Translate No Mr. Bond, I expect you to die.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"No Mr. Bond, I expect you to die.\", \"american-to-british\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `No <span class=\"highlight\">Mr</span> Bond, I expect you to die.`)",
                  "err": {},
                  "uuid": "89500204-6339-449d-ac9c-34d6c0025f07",
                  "parentUUID": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate Dr. Grosh will see you now.",
                  "fullTitle": "Unit Tests Translate to British English Translate Dr. Grosh will see you now.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Dr. Grosh will see you now.\", \"american-to-british\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `<span class=\"highlight\">Dr</span> Grosh will see you now.`)",
                  "err": {},
                  "uuid": "514e559d-e87a-4ca0-802b-90d2d3f249c4",
                  "parentUUID": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate Lunch is at 12:15 today.",
                  "fullTitle": "Unit Tests Translate to British English Translate Lunch is at 12:15 today.",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Lunch is at 12:15 today.\", \"american-to-british\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `Lunch is at <span class=\"highlight\">12.15</span> today.`)",
                  "err": {},
                  "uuid": "bc241503-3dfd-487b-a420-525317fea120",
                  "parentUUID": "a1d144ac-358a-4fef-9294-8ebb1c2e6c9c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "521919bf-93dc-425a-b853-49862d4558a1",
                "1daa1db3-7458-4ba3-bb3d-a66456241b14",
                "066807ea-e2ac-4c9f-bf92-66c0b1cf612b",
                "b20df9c0-a2a3-403e-b2c8-7528ac62599c",
                "afd5c3a0-291a-40e7-a09e-7a618bd0f877",
                "00cd0655-07dd-44f5-942e-f043828633bd",
                "a851cc18-a331-4ea7-a96d-274471e4ad22",
                "89500204-6339-449d-ac9c-34d6c0025f07",
                "514e559d-e87a-4ca0-802b-90d2d3f249c4",
                "bc241503-3dfd-487b-a420-525317fea120"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0b8bd622-8c28-4655-abda-da29db9773c4",
              "title": "Translate to American English",
              "fullFile": "/home/val/dev/website/public/tests/translator/unit-tests.js",
              "file": "/public/tests/translator/unit-tests.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "We watched the footie match for a while.",
                  "fullTitle": "Unit Tests Translate to American English We watched the footie match for a while.",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"We watched the footie match for a while.\", \"british-to-american\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `We watched the <span class=\"highlight\">soccer</span> match for a while.`)",
                  "err": {},
                  "uuid": "9c067ba6-a211-4009-b76f-206694ca3710",
                  "parentUUID": "0b8bd622-8c28-4655-abda-da29db9773c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate Paracetamol takes up to an hour to work.",
                  "fullTitle": "Unit Tests Translate to American English Translate Paracetamol takes up to an hour to work.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Paracetamol takes up to an hour to work.\", \"british-to-american\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `<span class=\"highlight\">Tylenol</span> takes up to an hour to work.`)",
                  "err": {},
                  "uuid": "6cc55490-45d3-464d-a66b-eb5538ed144a",
                  "parentUUID": "0b8bd622-8c28-4655-abda-da29db9773c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate First, caramelise the onions.",
                  "fullTitle": "Unit Tests Translate to American English Translate First, caramelise the onions.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"First, caramelise the onions.\", \"british-to-american\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `First, <span class=\"highlight\">caramelize</span> the onions.`)",
                  "err": {},
                  "uuid": "017470f2-32e8-4139-a30e-6713e1fab834",
                  "parentUUID": "0b8bd622-8c28-4655-abda-da29db9773c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate I spent the bank holiday at the funfair.",
                  "fullTitle": "Unit Tests Translate to American English Translate I spent the bank holiday at the funfair.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"I spent the bank holiday at the funfair.\", \"british-to-american\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `I spent the <span class=\"highlight\">public holiday</span> at the <span class=\"highlight\">carnival</span>.`)",
                  "err": {},
                  "uuid": "58ade470-af39-4abf-87c6-3d6119054f61",
                  "parentUUID": "0b8bd622-8c28-4655-abda-da29db9773c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate I had a bicky then went to the chippy.",
                  "fullTitle": "Unit Tests Translate to American English Translate I had a bicky then went to the chippy.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"I had a bicky then went to the chippy.\", \"british-to-american\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `I had a <span class=\"highlight\">cookie</span> then went to the <span class=\"highlight\">fish-and-<span class=\"highlight\">fish-and-chip shop</span></span>.`)",
                  "err": {},
                  "uuid": "1a6ba600-b99f-41cb-a772-6373f71a8c2d",
                  "parentUUID": "0b8bd622-8c28-4655-abda-da29db9773c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "I've just got bits and bobs in my bum bag.",
                  "fullTitle": "Unit Tests Translate to American English I've just got bits and bobs in my bum bag.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"I've just got bits and bobs in my bum bag.\", \"british-to-american\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `I've just got <span class=\"highlight\">odds and ends</span> in my <span class=\"highlight\">fanny pack</span>.`)",
                  "err": {},
                  "uuid": "717f27a0-5780-4883-8cf3-ed9c7bf813f3",
                  "parentUUID": "0b8bd622-8c28-4655-abda-da29db9773c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate The car boot sale at Boxted Airfield was called off.",
                  "fullTitle": "Unit Tests Translate to American English Translate The car boot sale at Boxted Airfield was called off.",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"The car boot sale at Boxted Airfield was called off.\", \"british-to-american\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `The <span class=\"highlight\">swap meet</span> at Boxted Airfield was called off.`)",
                  "err": {},
                  "uuid": "0ee03f46-b50c-457d-97a6-c611f7f7cc3a",
                  "parentUUID": "0b8bd622-8c28-4655-abda-da29db9773c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate Have you met Mrs Kalyani?",
                  "fullTitle": "Unit Tests Translate to American English Translate Have you met Mrs Kalyani?",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Have you met Mrs Kalyani?\", \"british-to-american\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `Have you met <span class=\"highlight\">Mrs.</span> Kalyani?`)",
                  "err": {},
                  "uuid": "b84c71d4-f167-499c-9797-cd014aceaf74",
                  "parentUUID": "0b8bd622-8c28-4655-abda-da29db9773c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate Prof Joyner of King's College, London.",
                  "fullTitle": "Unit Tests Translate to American English Translate Prof Joyner of King's College, London.",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Prof Joyner of King's College, London.\", \"british-to-american\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `<span class=\"highlight\">Prof.</span> Joyner of King's College, London.`)",
                  "err": {},
                  "uuid": "94b01bb9-4a1d-418d-9e80-242ba3d1807d",
                  "parentUUID": "0b8bd622-8c28-4655-abda-da29db9773c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Translate Tea time is usually around 4 or 4.30.",
                  "fullTitle": "Unit Tests Translate to American English Translate Tea time is usually around 4 or 4.30.",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Tea time is usually around 4 or 4.30.\", \"british-to-american\");\nlet r = t.translate();\nassert.isString(r.translation);\nassert.strictEqual(r.translation, `Tea time is usually around 4 or <span class=\"highlight\">4:30.</span>`)",
                  "err": {},
                  "uuid": "6437efae-8e08-48e9-8fa4-117c969606f8",
                  "parentUUID": "0b8bd622-8c28-4655-abda-da29db9773c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c067ba6-a211-4009-b76f-206694ca3710",
                "6cc55490-45d3-464d-a66b-eb5538ed144a",
                "017470f2-32e8-4139-a30e-6713e1fab834",
                "58ade470-af39-4abf-87c6-3d6119054f61",
                "1a6ba600-b99f-41cb-a772-6373f71a8c2d",
                "717f27a0-5780-4883-8cf3-ed9c7bf813f3",
                "0ee03f46-b50c-457d-97a6-c611f7f7cc3a",
                "b84c71d4-f167-499c-9797-cd014aceaf74",
                "94b01bb9-4a1d-418d-9e80-242ba3d1807d",
                "6437efae-8e08-48e9-8fa4-117c969606f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a2eca665-4638-4bbb-ae1f-1abe8fb8fa81",
              "title": "Highlight translated text",
              "fullFile": "/home/val/dev/website/public/tests/translator/unit-tests.js",
              "file": "/public/tests/translator/unit-tests.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Highlight the translation of 'favorite' in 'Mangoes are my favorite fruit.'",
                  "fullTitle": "Unit Tests Highlight translated text Highlight the translation of 'favorite' in 'Mangoes are my favorite fruit.'",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Mangoes are my favorite fruit.\", \"american-to-british\");\nlet r = t.translate();\nlet regex = new RegExp(`<span class=\"highlight\">favourite</span>`,\"gi\")\nassert.isString(r.translation);\nassert.isTrue(regex.test(r.translation))",
                  "err": {},
                  "uuid": "b09505c3-46a4-495e-8766-330ba11ce3c7",
                  "parentUUID": "a2eca665-4638-4bbb-ae1f-1abe8fb8fa81",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Highlight the translation of 'yogurt' & 'breakfast' in 'I ate yogurt for breakfast.'",
                  "fullTitle": "Unit Tests Highlight translated text Highlight the translation of 'yogurt' & 'breakfast' in 'I ate yogurt for breakfast.'",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"I ate yogurt for breakfast.\", \"american-to-british\");\nlet r = t.translate();\nlet regex1 = new RegExp(`<span class=\"highlight\">yoghurt</span>`,\"gi\")\nlet regex2 = new RegExp(`<span class=\"highlight\">brekkie</span>`,\"gi\")\nassert.isString(r.translation);\nassert.isTrue(regex1.test(r.translation))\nassert.isTrue(regex2.test(r.translation))",
                  "err": {},
                  "uuid": "ae8199a1-4c3c-4cc0-8257-82569ee4f274",
                  "parentUUID": "a2eca665-4638-4bbb-ae1f-1abe8fb8fa81",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Highlight the translation of 'footie' in 'We watched the footie match for a while.'",
                  "fullTitle": "Unit Tests Highlight translated text Highlight the translation of 'footie' in 'We watched the footie match for a while.'",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"We watched the footie match for a while.\", \"british-to-american\");\nlet r = t.translate();\nlet regex = new RegExp(`<span class=\"highlight\">soccer</span>`,\"gi\")\nassert.isString(r.translation);\nassert.isTrue(regex.test(r.translation))",
                  "err": {},
                  "uuid": "7b725730-d48d-4943-94ab-516ece9ce449",
                  "parentUUID": "a2eca665-4638-4bbb-ae1f-1abe8fb8fa81",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Highlight the translation of 'Paracetamol' in 'Paracetamol takes up to an hour to work.'",
                  "fullTitle": "Unit Tests Highlight translated text Highlight the translation of 'Paracetamol' in 'Paracetamol takes up to an hour to work.'",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let t = new Translator(\"Paracetamol takes up to an hour to work.\", \"british-to-american\");\nlet r = t.translate();\nlet regex = new RegExp(`<span class=\"highlight\">Tylenol</span>`,\"gi\")\nassert.isString(r.translation);\nassert.isTrue(regex.test(r.translation))",
                  "err": {},
                  "uuid": "b0b9cdf9-f0c7-4dde-8bd5-0850520110d3",
                  "parentUUID": "a2eca665-4638-4bbb-ae1f-1abe8fb8fa81",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b09505c3-46a4-495e-8766-330ba11ce3c7",
                "ae8199a1-4c3c-4cc0-8257-82569ee4f274",
                "7b725730-d48d-4943-94ab-516ece9ce449",
                "b0b9cdf9-f0c7-4dde-8bd5-0850520110d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome-translator",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./public/mochawesome-reports",
        "reportFilename": "mochawesome-translator",
        "reportTitle": "Translator Tests",
        "reportPageTitle": "Translator Tests",
        "charts": true
      },
      "version": "6.2.0"
    }
  }
}